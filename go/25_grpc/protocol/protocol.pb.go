// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package demo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data1 struct {
	Value                int32    `protobuf:"varint,1,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data1) Reset()         { *m = Data1{} }
func (m *Data1) String() string { return proto.CompactTextString(m) }
func (*Data1) ProtoMessage()    {}
func (*Data1) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_88490e26a73a3c7a, []int{0}
}
func (m *Data1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data1.Unmarshal(m, b)
}
func (m *Data1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data1.Marshal(b, m, deterministic)
}
func (dst *Data1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data1.Merge(dst, src)
}
func (m *Data1) XXX_Size() int {
	return xxx_messageInfo_Data1.Size(m)
}
func (m *Data1) XXX_DiscardUnknown() {
	xxx_messageInfo_Data1.DiscardUnknown(m)
}

var xxx_messageInfo_Data1 proto.InternalMessageInfo

func (m *Data1) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Data2 struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data2) Reset()         { *m = Data2{} }
func (m *Data2) String() string { return proto.CompactTextString(m) }
func (*Data2) ProtoMessage()    {}
func (*Data2) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_88490e26a73a3c7a, []int{1}
}
func (m *Data2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data2.Unmarshal(m, b)
}
func (m *Data2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data2.Marshal(b, m, deterministic)
}
func (dst *Data2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data2.Merge(dst, src)
}
func (m *Data2) XXX_Size() int {
	return xxx_messageInfo_Data2.Size(m)
}
func (m *Data2) XXX_DiscardUnknown() {
	xxx_messageInfo_Data2.DiscardUnknown(m)
}

var xxx_messageInfo_Data2 proto.InternalMessageInfo

func (m *Data2) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Data3 struct {
	FirstValue           int64    `protobuf:"varint,1,opt,name=FirstValue,json=firstValue,proto3" json:"FirstValue,omitempty"`
	LastValue            int64    `protobuf:"varint,2,opt,name=LastValue,json=lastValue,proto3" json:"LastValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data3) Reset()         { *m = Data3{} }
func (m *Data3) String() string { return proto.CompactTextString(m) }
func (*Data3) ProtoMessage()    {}
func (*Data3) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_88490e26a73a3c7a, []int{2}
}
func (m *Data3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data3.Unmarshal(m, b)
}
func (m *Data3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data3.Marshal(b, m, deterministic)
}
func (dst *Data3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data3.Merge(dst, src)
}
func (m *Data3) XXX_Size() int {
	return xxx_messageInfo_Data3.Size(m)
}
func (m *Data3) XXX_DiscardUnknown() {
	xxx_messageInfo_Data3.DiscardUnknown(m)
}

var xxx_messageInfo_Data3 proto.InternalMessageInfo

func (m *Data3) GetFirstValue() int64 {
	if m != nil {
		return m.FirstValue
	}
	return 0
}

func (m *Data3) GetLastValue() int64 {
	if m != nil {
		return m.LastValue
	}
	return 0
}

func init() {
	proto.RegisterType((*Data1)(nil), "demo.Data1")
	proto.RegisterType((*Data2)(nil), "demo.Data2")
	proto.RegisterType((*Data3)(nil), "demo.Data3")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServiceClient is the client API for DemoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServiceClient interface {
	GetSquare(ctx context.Context, in *Data1, opts ...grpc.CallOption) (*Data2, error)
	GetSum(ctx context.Context, opts ...grpc.CallOption) (DemoService_GetSumClient, error)
	ListNaturalNumbers(ctx context.Context, in *Data3, opts ...grpc.CallOption) (DemoService_ListNaturalNumbersClient, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) GetSquare(ctx context.Context, in *Data1, opts ...grpc.CallOption) (*Data2, error) {
	out := new(Data2)
	err := c.cc.Invoke(ctx, "/demo.DemoService/GetSquare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) GetSum(ctx context.Context, opts ...grpc.CallOption) (DemoService_GetSumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DemoService_serviceDesc.Streams[0], "/demo.DemoService/GetSum", opts...)
	if err != nil {
		return nil, err
	}
	x := &demoServiceGetSumClient{stream}
	return x, nil
}

type DemoService_GetSumClient interface {
	Send(*Data1) error
	CloseAndRecv() (*Data2, error)
	grpc.ClientStream
}

type demoServiceGetSumClient struct {
	grpc.ClientStream
}

func (x *demoServiceGetSumClient) Send(m *Data1) error {
	return x.ClientStream.SendMsg(m)
}

func (x *demoServiceGetSumClient) CloseAndRecv() (*Data2, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Data2)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *demoServiceClient) ListNaturalNumbers(ctx context.Context, in *Data3, opts ...grpc.CallOption) (DemoService_ListNaturalNumbersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DemoService_serviceDesc.Streams[1], "/demo.DemoService/ListNaturalNumbers", opts...)
	if err != nil {
		return nil, err
	}
	x := &demoServiceListNaturalNumbersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DemoService_ListNaturalNumbersClient interface {
	Recv() (*Data2, error)
	grpc.ClientStream
}

type demoServiceListNaturalNumbersClient struct {
	grpc.ClientStream
}

func (x *demoServiceListNaturalNumbersClient) Recv() (*Data2, error) {
	m := new(Data2)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DemoServiceServer is the server API for DemoService service.
type DemoServiceServer interface {
	GetSquare(context.Context, *Data1) (*Data2, error)
	GetSum(DemoService_GetSumServer) error
	ListNaturalNumbers(*Data3, DemoService_ListNaturalNumbersServer) error
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_GetSquare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).GetSquare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.DemoService/GetSquare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).GetSquare(ctx, req.(*Data1))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_GetSum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DemoServiceServer).GetSum(&demoServiceGetSumServer{stream})
}

type DemoService_GetSumServer interface {
	SendAndClose(*Data2) error
	Recv() (*Data1, error)
	grpc.ServerStream
}

type demoServiceGetSumServer struct {
	grpc.ServerStream
}

func (x *demoServiceGetSumServer) SendAndClose(m *Data2) error {
	return x.ServerStream.SendMsg(m)
}

func (x *demoServiceGetSumServer) Recv() (*Data1, error) {
	m := new(Data1)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DemoService_ListNaturalNumbers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Data3)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DemoServiceServer).ListNaturalNumbers(m, &demoServiceListNaturalNumbersServer{stream})
}

type DemoService_ListNaturalNumbersServer interface {
	Send(*Data2) error
	grpc.ServerStream
}

type demoServiceListNaturalNumbersServer struct {
	grpc.ServerStream
}

func (x *demoServiceListNaturalNumbersServer) Send(m *Data2) error {
	return x.ServerStream.SendMsg(m)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.DemoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSquare",
			Handler:    _DemoService_GetSquare_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetSum",
			Handler:       _DemoService_GetSum_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ListNaturalNumbers",
			Handler:       _DemoService_ListNaturalNumbers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protocol.proto",
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_protocol_88490e26a73a3c7a) }

var fileDescriptor_protocol_88490e26a73a3c7a = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x03, 0x33, 0x84, 0x58, 0x52, 0x52, 0x73, 0xf3, 0x95, 0x64, 0xb9,
	0x58, 0x5d, 0x12, 0x4b, 0x12, 0x0d, 0x85, 0x44, 0xb8, 0x58, 0xc3, 0x12, 0x73, 0x4a, 0x53, 0x25,
	0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x58, 0xcb, 0x40, 0x1c, 0x98, 0xb4, 0x11, 0xaa, 0x34, 0x33,
	0x4c, 0xda, 0x15, 0x22, 0x6d, 0x2c, 0x24, 0xc7, 0xc5, 0xe5, 0x96, 0x59, 0x54, 0x5c, 0x82, 0xac,
	0x86, 0x2b, 0x0d, 0x2e, 0x22, 0x24, 0xc3, 0xc5, 0xe9, 0x93, 0x08, 0x93, 0x66, 0x02, 0x4b, 0x73,
	0xe6, 0xc0, 0x04, 0x8c, 0x26, 0x31, 0x72, 0x71, 0xbb, 0xa4, 0xe6, 0xe6, 0x07, 0xa7, 0x16, 0x95,
	0x65, 0x26, 0xa7, 0x0a, 0xa9, 0x73, 0x71, 0xba, 0xa7, 0x96, 0x04, 0x17, 0x96, 0x26, 0x16, 0xa5,
	0x0a, 0x71, 0xeb, 0x81, 0x1c, 0xaa, 0x07, 0x76, 0xa5, 0x14, 0x12, 0xc7, 0x48, 0x89, 0x41, 0x48,
	0x8d, 0x8b, 0x0d, 0xa4, 0xb0, 0x34, 0x17, 0x9f, 0x2a, 0x0d, 0x46, 0x21, 0x23, 0x2e, 0x21, 0x9f,
	0xcc, 0xe2, 0x12, 0xbf, 0xc4, 0x92, 0xd2, 0xa2, 0xc4, 0x1c, 0xbf, 0xd2, 0xdc, 0xa4, 0xd4, 0xa2,
	0x62, 0x64, 0x3d, 0xc6, 0x68, 0x7a, 0x0c, 0x18, 0x93, 0xd8, 0xc0, 0xc1, 0x64, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x8c, 0xb7, 0xc4, 0x8f, 0x38, 0x01, 0x00, 0x00,
}
